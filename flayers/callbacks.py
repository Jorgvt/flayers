# AUTOGENERATED! DO NOT EDIT! File to edit: ../Notebooks/03_callbacks.ipynb.

# %% auto 0
__all__ = ['GaborLayerLogger', 'GaborLayerSeqLogger']

# %% ../Notebooks/03_callbacks.ipynb 2
import wandb

import tensorflow as tf
from tensorflow.keras.callbacks import Callback

from .layers import *

# %% ../Notebooks/03_callbacks.ipynb 6
class GaborLayerLogger(Callback):
    import wandb

    """Logs the gabor parameters into wandb during training."""
    def on_batch_end(self, 
                     batch, # Batch number.
                     logs=None, # Dictionary containing metrics and information of the training.
                     ):
        """Logs the gabor parameters after each batch (after each parameter update)."""
        for layer in self.model.layers:
            if isinstance(layer, GaborLayer):
                for weight in layer.weights:
                    wandb.log({f'{layer.name}.{weight.name}': wandb.Histogram(weight)})

# %% ../Notebooks/03_callbacks.ipynb 7
class GaborLayerSeqLogger(Callback):
    import wandb

    """Logs the gabor parameters into wandb during training."""
    def on_batch_end(self, 
                     batch, # Batch number.
                     logs=None, # Dictionary containing metrics and information of the training.
                     ):
        """Logs the gabor parameters after each batch (after each parameter update)."""
        for layer in self.model.feature_extractor.layers:
            if isinstance(layer, GaborLayer):
                for weight in layer.weights:
                    wandb.log({f'{layer.name}.{weight.name}': wandb.Histogram(weight)})
